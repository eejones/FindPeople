class Member < ActiveRecord::Base
  attr_accessible :act, :camera, :credits, :direct, :extra, :marketing, :other, :pa, :paid, :password, :password_confirmation, :produce, :salary, :setdesign, :sound, :stunt, :username, :wardrobe, :what, :write, :email, :admin
  has_secure_password

  before_save { |member| member.email = email.downcase }
  before_save :create_remember_token
  validates :username, presence: true, length: { maximum: 20 }
  VALID_EMAIL_REGEX = /\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i
  validates :email, presence:   true,
                    format:     { with: VALID_EMAIL_REGEX },
                    uniqueness: { case_sensitive: false }
  validates :password, :presence=> true, :length=> { :minimum=> 6 }
  validates :password_confirmation, :presence=> true

  private

    def create_remember_token
      self.remember_token = SecureRandom.urlsafe_base64
    end

end
