- provide(:title, "All Members")
%head
  \/*load the SDK*/
  %script{:src => "http://www.mapquestapi.com/sdk/js/v7.0.s/mqa.toolkit.js?key=YOUR_KEY_GOES_HERE"}
  :javascript
    /*An example of using the MQA.EventUtil to hook into the window load event and execute defined function 
    passed in as the last parameter. You could alternatively create a plain function here and have it 
    executed whenever you like (e.g. <body onload="yourfunction">).*/ 

    MQA.EventUtil.observe(window, 'load', function() {
	
      /*Create an object for options*/ 
      var options={
        elt:document.getElementById('map'),       /*ID of element on the page where you want the map added*/ 
        zoom:10,                                  /*initial zoom level of the map*/ 
        latLng:{lat:39.743943, lng:-105.020089},  /*center of map in latitude/longitude */ 
        mtype:'map',                              /*map type (map)*/ 
        bestFitMargin:0,                          /*margin offset from the map viewport when applying a bestfit on shapes*/ 
        zoomOnDoubleClick:true                    /*zoom in when double-clicking on map*/ 
      };

      /*Construct an instance of MQA.TileMap with the options object*/ 
      window.map = new MQA.TileMap(options);
    });
%h1 Listing members

= form_tag('', :method => :get) do
  %div.filtertime
    %label{:for => "show"} Show:
    %br/
    %select#show{:name => "show", :onchange => "window.location='\#{url_for(eval('#{'member'}_url({ :query => params[:query] })'))}' + '?show=' + this.value"}
      - @filters.each do |pair|
        %option{:selected => 'selected', :value => pair[:scope]}
          = pair[:label]
    = submit_tag 'Filter'

= will_paginate

%ul.members
  = render @members
= will_paginate

= link_to 'New Member', new_member_path
